{"version":3,"sources":["TaskHeader.js","task1/List.js","task1/Details.js","task1/ListApp.js","task2/useJsonFetch.js","task2/JsonFetch.js","App.js","index.js"],"names":["TaskHeader","props","title","className","List","list","selected","onClick","map","i","id","name","Details","info","fetchData","useState","details","data","setData","avatar","city","company","position","useEffect","src","alt","width","ListApp","setList","setSelected","loading","setLoading","error","setError","file","getData","a","fetch","process","response","ok","Error","statusText","json","findIndex","item","message","useJsonFetch","url","opts","JsonFetch","path","outputData","Object","keys","key","outputError","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fa83728.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction TaskHeader(props) {\n  const { title } = props; \n\n  return (\n    <div className=\"TaskHeader\">\n      <h1 className=\"TaskHeader-title\">{title}</h1> \n    </div>\n  );\n}\n\nTaskHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default TaskHeader;\n","import PropTypes from 'prop-types';\n\nfunction List(props) {\n  const { list, selected, onClick } = props;  \n  \n  return (\n    <ul className=\"List\">\n      {list.map(({ id, name }, i) => \n        <li className={i === selected ? 'List-item List-item-selected' : 'List-item'} \n          onClick={() => onClick(id)} \n          key={id}>{name}\n        </li>\n      )}\n    </ul>   \n  );\n};\n\nList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string \n    })\n  ).isRequired,\n  selected: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default List;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Details(props) {\n  const { info, fetchData } = props;  \n  const { id } = info;\n\n  const [data, setData] = useState({ details: {} });\n  const { name, avatar, details: { city, company, position } } = data;\n\n  useEffect(() => {\n    fetchData(`${id}.json`, data => {\n      setData(data); \n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  return (\n    <div className=\"Details\"> \n      <img className=\"Details-image\" src={avatar} alt=\"no avatar\" width=\"300px\"/>\n      <h3 className=\"Details-name\">{name}</h3>\n      <p className=\"Details-item\">City: {city}</p>\n      <p className=\"Details-item\">Company: {company}</p>\n      <p className=\"Details-item\">Position: {position}</p>\n    </div>   \n  );\n};\n\nDetails.propTypes = {\n  info: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string \n  }).isRequired,\n  fetchData: PropTypes.func.isRequired\n};\n\nexport default Details;","import { useState, useEffect } from 'react';\nimport List from './List';\nimport Details from './Details';\n\nfunction ListApp() {\n  const [list, setList] = useState([]);\n  const [selected, setSelected] = useState(-1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchData('users.json', data => {\n      setList(data);\n      setSelected(-1);  \n    });\n  },[]);\n\n  const fetchData = async (file, getData) => {\n    setLoading(true);\n    try {\n      const response = await fetch(process.env.REACT_APP_USERS_DATA + file);\n\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      const data = await response.json();\n      setError(null);\n      getData(data);\n\n    } catch (error) {\n      setError(error);\n\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const onClick = id => {\n    setSelected(list.findIndex(item => item.id === id));\n  }\n\n  return (\n    <div className=\"ListApp\">\n      <div className=\"ListApp-container\">\n        <List list={list} selected={selected} onClick={onClick}/>\n        {selected >= 0 && <Details info={list[selected]} fetchData={fetchData} />}\n      </div>\n      {loading && (\n        <div className=\"ListApp-loading\">\n          <p className=\"ListApp-loading-text\">Loading...</p>\n        </div>\n      )}\n      {error && <p className=\"ListApp-error\">{error.message ? error.message : 'Server not found'}</p>}\n    </div>\n  );\n}\n\nexport default ListApp;","import { useState, useEffect } from 'react';\n\nfunction useJsonFetch(url, opts) {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(url, opts);\n  \n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n  \n        const data = await response.json();\n        setError(null);\n        setData(data);\n  \n      } catch (error) {\n        setError(error);\n  \n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return [data, loading, error];\n}\n\nexport default useJsonFetch;","import PropTypes from 'prop-types';\nimport useJsonFetch from './useJsonFetch';\n\nfunction JsonFetch(props) {\n  const { path } = props;  \n\n  const [data, loading, error] = useJsonFetch(process.env.REACT_APP_JSON_SERVER + path);\n\n  const outputData = (\n    <div className=\"JsonFetch-data\">\n      {typeof data === 'object' && Object.keys(data).map((key, i) => <p key={i}>{key + ': ' + data[key]}</p>)}\n    </div>\n  ) \n\n  const outputError = error && error.message ? error.message : 'Server Not Found';\n  \n  return (\n    <div className=\"JsonFetch\"> \n      {error ? <p className=\"JsonFetch-error\">{outputError}</p> : outputData}\n      {loading && (\n        <div className=\"JsonFetch-loading\">\n          <p className=\"JsonFetch-loading-text\">Loading...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nJsonFetch.propTypes = {\n  path: PropTypes.string.isRequired\n};\n\nexport default JsonFetch;","import React from 'react';\nimport './App.css';\nimport TaskHeader from './TaskHeader';\nimport ListApp from './task1/ListApp';\nimport JsonFetch from './task2/JsonFetch';\n\nfunction App() {\n  return (<React.Fragment>\n    <div className=\"task-1\">\n      <TaskHeader title=\"Задача 1\" />\n      <ListApp />\n    </div>\n    <div className=\"task-2\">\n      <TaskHeader title=\"Задача 2\" />\n      <div className=\"task-2-container\">\n        <JsonFetch path=\"data\" />\n        <JsonFetch path=\"error\" />\n        <JsonFetch path=\"loading\" />\n        <JsonFetch path=\"non_existent\" />\n      </div>\n    </div>\n  </React.Fragment>);\n}\n\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}